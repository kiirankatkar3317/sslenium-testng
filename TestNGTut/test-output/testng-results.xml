<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="16" passed="13" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-09-18T01:31:11 IST" name="Loan" finished-at="2022-09-18T01:31:11 IST" duration-ms="150">
    <groups>
      <group name="kiran">
        <method signature="day1.Mobiletestloan()[pri:0, instance:test.day1@10d307f1]" name="Mobiletestloan" class="test.day1"/>
        <method signature="day2.Mobilehomeloan()[pri:0, instance:test.day2@32b260fa]" name="Mobilehomeloan" class="test.day2"/>
        <method signature="day3.Mobilelogin()[pri:0, instance:test.day3@581ac8a8]" name="Mobilelogin" class="test.day3"/>
        <method signature="day4.Mobilecarloan()[pri:0, instance:test.day4@3d6f0054]" name="Mobilecarloan" class="test.day4"/>
      </group> <!-- kiran -->
    </groups>
    <test started-at="2022-09-18T01:31:11 IST" name="Loantest" finished-at="2022-09-18T01:31:11 IST" duration-ms="150">
      <class name="test.day4">
        <test-method is-config="true" signature="BeforeSuitetest()[pri:0, instance:test.day4@3d6f0054]" started-at="2022-09-18T01:31:11 IST" name="BeforeSuitetest" finished-at="2022-09-18T01:31:11 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeSuitetest -->
        <test-method signature="Apicarloan()[pri:0, instance:test.day4@3d6f0054]" started-at="2022-09-18T01:31:11 IST" name="Apicarloan" finished-at="2022-09-18T01:31:11 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Apicarloan -->
        <test-method is-config="true" signature="Beforemethodtest()[pri:0, instance:test.day4@3d6f0054]" started-at="2022-09-18T01:31:11 IST" name="Beforemethodtest" finished-at="2022-09-18T01:31:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Beforemethodtest -->
        <test-method signature="Mobilecarloan()[pri:0, instance:test.day4@3d6f0054]" started-at="2022-09-18T01:31:11 IST" name="Mobilecarloan" finished-at="2022-09-18T01:31:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mobilecarloan -->
        <test-method is-config="true" signature="Beforemethodtest()[pri:0, instance:test.day4@3d6f0054]" started-at="2022-09-18T01:31:11 IST" name="Beforemethodtest" finished-at="2022-09-18T01:31:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Beforemethodtest -->
        <test-method signature="Webcarloan(java.lang.String,java.lang.String)[pri:0, instance:test.day4@3d6f0054]" started-at="2022-09-18T01:31:11 IST" name="Webcarloan" finished-at="2022-09-18T01:31:11 IST" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'URL' is required by @Test on method Webcarloan but has not been marked @Optional or defined
in C:\Users\LENOVO\eclipse-workspace\TestNGTut\testng2.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'URL' is required by @Test on method Webcarloan but has not been marked @Optional or defined
in C:\Users\LENOVO\eclipse-workspace\TestNGTut\testng2.xml
at org.testng.internal.Parameters.createParams(Parameters.java:270)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:358)
at org.testng.internal.Parameters.createParameters(Parameters.java:700)
at org.testng.internal.Parameters.handleParameters(Parameters.java:884)
at org.testng.internal.Parameters.handleParameters(Parameters.java:740)
at org.testng.internal.ParameterHandler.handleParameters(ParameterHandler.java:59)
at org.testng.internal.ParameterHandler.createParameters(ParameterHandler.java:38)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:791)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Webcarloan -->
        <test-method is-config="true" signature="AfterSuitetest()[pri:0, instance:test.day4@3d6f0054]" started-at="2022-09-18T01:31:11 IST" name="AfterSuitetest" finished-at="2022-09-18T01:31:11 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterSuitetest -->
      </class> <!-- test.day4 -->
      <class name="test.day2">
        <test-method is-config="true" signature="Beforeclasstest()[pri:0, instance:test.day2@32b260fa]" started-at="2022-09-18T01:31:11 IST" name="Beforeclasstest" finished-at="2022-09-18T01:31:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Beforeclasstest -->
        <test-method signature="Apihomeloan()[pri:0, instance:test.day2@32b260fa]" started-at="2022-09-18T01:31:11 IST" name="Apihomeloan" finished-at="2022-09-18T01:31:11 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Apihomeloan -->
        <test-method signature="Mobilehomeloan()[pri:0, instance:test.day2@32b260fa]" started-at="2022-09-18T01:31:11 IST" name="Mobilehomeloan" finished-at="2022-09-18T01:31:11 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mobilehomeloan -->
        <test-method signature="Webhomeloan(java.lang.String,java.lang.String)[pri:0, instance:test.day2@32b260fa]" started-at="2022-09-18T01:31:11 IST" name="Webhomeloan" data-provider="getData" finished-at="2022-09-18T01:31:11 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[username]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Webhomeloan -->
        <test-method signature="Webhomeloan(java.lang.String,java.lang.String)[pri:0, instance:test.day2@32b260fa]" started-at="2022-09-18T01:31:11 IST" name="Webhomeloan" data-provider="getData" finished-at="2022-09-18T01:31:11 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[username1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Webhomeloan -->
        <test-method signature="Webhomeloan(java.lang.String,java.lang.String)[pri:0, instance:test.day2@32b260fa]" started-at="2022-09-18T01:31:11 IST" name="Webhomeloan" data-provider="getData" finished-at="2022-09-18T01:31:11 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[username2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Webhomeloan -->
        <test-method is-config="true" signature="Afterclasstest()[pri:0, instance:test.day2@32b260fa]" started-at="2022-09-18T01:31:11 IST" name="Afterclasstest" finished-at="2022-09-18T01:31:11 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Afterclasstest -->
      </class> <!-- test.day2 -->
      <class name="test.day3">
        <test-method is-config="true" signature="Beforemethodtest()[pri:0, instance:test.day3@581ac8a8]" started-at="2022-09-18T01:31:11 IST" name="Beforemethodtest" finished-at="2022-09-18T01:31:11 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Beforemethodtest -->
        <test-method signature="Apilogin()[pri:0, instance:test.day3@581ac8a8]" started-at="2022-09-18T01:31:11 IST" name="Apilogin" finished-at="2022-09-18T01:31:11 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Apilogin -->
        <test-method is-config="true" signature="Aftermethodtest()[pri:0, instance:test.day3@581ac8a8]" started-at="2022-09-18T01:31:11 IST" name="Aftermethodtest" finished-at="2022-09-18T01:31:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Aftermethodtest -->
        <test-method is-config="true" signature="Beforemethodtest()[pri:0, instance:test.day3@581ac8a8]" started-at="2022-09-18T01:31:11 IST" name="Beforemethodtest" finished-at="2022-09-18T01:31:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Beforemethodtest -->
        <test-method signature="Mobilelogin()[pri:0, instance:test.day3@581ac8a8]" started-at="2022-09-18T01:31:11 IST" name="Mobilelogin" finished-at="2022-09-18T01:31:11 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mobilelogin -->
        <test-method is-config="true" signature="Beforemethodtest()[pri:0, instance:test.day3@581ac8a8]" started-at="2022-09-18T01:31:11 IST" name="Beforemethodtest" finished-at="2022-09-18T01:31:11 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Beforemethodtest -->
        <test-method is-config="true" signature="Aftermethodtest()[pri:0, instance:test.day3@581ac8a8]" started-at="2022-09-18T01:31:11 IST" name="Aftermethodtest" finished-at="2022-09-18T01:31:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Aftermethodtest -->
        <test-method signature="Weblogin()[pri:0, instance:test.day3@581ac8a8]" started-at="2022-09-18T01:31:11 IST" name="Weblogin" finished-at="2022-09-18T01:31:11 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Weblogin -->
        <test-method is-config="true" signature="Aftermethodtest()[pri:0, instance:test.day3@581ac8a8]" started-at="2022-09-18T01:31:11 IST" name="Aftermethodtest" finished-at="2022-09-18T01:31:11 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Aftermethodtest -->
      </class> <!-- test.day3 -->
      <class name="test.day1">
        <test-method is-config="true" signature="Beforetesting()[pri:0, instance:test.day1@10d307f1]" started-at="2022-09-18T01:31:11 IST" name="Beforetesting" finished-at="2022-09-18T01:31:11 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Beforetesting -->
        <test-method signature="Apitestloan()[pri:0, instance:test.day1@10d307f1]" started-at="2022-09-18T01:31:11 IST" name="Apitestloan" finished-at="2022-09-18T01:31:11 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Apitestloan -->
        <test-method signature="Mobiletestloan()[pri:0, instance:test.day1@10d307f1]" started-at="2022-09-18T01:31:11 IST" name="Mobiletestloan" finished-at="2022-09-18T01:31:11 IST" duration-ms="5" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.day1.Mobiletestloan(day1.java:12)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mobiletestloan -->
        <test-method signature="Mobiletestloan1()[pri:0, instance:test.day1@10d307f1]" started-at="2022-09-18T01:31:11 IST" name="Mobiletestloan1" finished-at="2022-09-18T01:31:11 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mobiletestloan1 -->
        <test-method signature="Mobiletestloan2()[pri:0, instance:test.day1@10d307f1]" started-at="2022-09-18T01:31:11 IST" name="Mobiletestloan2" finished-at="2022-09-18T01:31:11 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mobiletestloan2 -->
        <test-method is-config="true" signature="Aftertesting()[pri:0, instance:test.day1@10d307f1]" started-at="2022-09-18T01:31:11 IST" name="Aftertesting" finished-at="2022-09-18T01:31:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Aftertesting -->
      </class> <!-- test.day1 -->
    </test> <!-- Loantest -->
  </suite> <!-- Loan -->
</testng-results>
